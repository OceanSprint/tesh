# Run all tests, linters, code analysis and other QA tasks on
# every push to main and PRs.
#
# To SSH into the runner to debug a failure, add the following step before
# the failing step
#    - uses: lhotari/action-upterm@v1
#      with:
#        limit-access-to-actor: true

name: CI

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
    tags:
      - '*'


# Prevent multiple jobs running after fast subsequent pushes
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:

  tests:
    strategy:
      matrix:
        python: ["python3.9", "python3.10", "python3.11"]

    name: Tests

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/nix-shell
        with:
          cachix_auth_token: '${{ secrets.CACHIX_AUTH_TOKEN_PUBLIC }}'

      - name: Install Poetry environment
        env:
          PYTHON: ${{ matrix.python }}
        run: |
          nix-shell --run "poetry env use $PYTHON"
          nix-shell --run "poetry install"

      - name: Run linters and unit tests
        run: |
          nix-shell --run "make lint all=true"
          nix-shell --run "make types"
          nix-shell --run "make unit"
          nix-shell --run "make tesh"
          nix-shell --run "make examples"

      - uses: ./.github/actions/uncommitted-changes

  release:
    name: Release
    needs: tests

    # To test publishing to testpypi:
    # * comment out "verify git tag matches pyproject.toml version"
    # * uncomment "with: repository-url: https://test.pypi.org/legacy/"

    if:
      github.event_name == 'push' && startsWith(github.ref, 'refs/tags')

    runs-on: ubuntu-latest
    environment: release
    permissions:
      id-token: write

    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/nix-shell
        with:
          cachix_auth_token: '${{ secrets.CACHIX_AUTH_TOKEN_PUBLIC }}'

      - name: Verify git tag matches pyproject.toml version
        run: |
          echo "$GITHUB_REF_NAME"
          echo `nix-shell --run "poetry version --short"`
          [[ "$GITHUB_REF_NAME" == `poetry version --short` ]] && exit 0 || exit 1

      - name: Build tesh wheel
        run: |
          nix-shell --run "poetry build"

      - name: Upload wheel to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        # with:
        #   repository-url: https://test.pypi.org/legacy/
